<div class="container">

  <div class="section mb-3 ">
    <div class="col-12 p-0">
      <div class="card-origin text-center">
        <div>
          <img src="https://images.unsplash.com/photo-1499852771843-6693d72f906f?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=889&q=80" alt="yoga studio" class="card-vertical-cover">
        </div>
        <div class="avatar-show-position">
          <%= cl_image_tag @club.photo, class: "avatar-bordered-card-show" %>
        </div>
        <div class="card-bottom">
          <div class="card-info">
            <h2 class="club-card-name"><%= @club.name %></h2>
          </div>
        <% @membership = Membership.where(user_id: current_user.id, club_id: @club.id) %>
      <% if current_user != @club.admin %>
      <% if @membership == [] %>
      <%= simple_form_for [@club, @membership = Membership.new] do |f| %>
      <%= f.hidden_field :status, value: "Pending" %>
      <%= f.submit "Add to Memberships", class:"btn btn-confirm"%>
      <% end %>
      <% elsif @membership[0].status == "Member" %>
      <div class="alert alert-success">
        <p>You already are a member of this club!</p>
      </div>
      <% else %>
      <div class="alert alert-warning">
        <p>Your membership request is getting processed</p></div>
        <% end %>
        <% end %>
        </div>
      </div>
    </div>
  </div>

  <div class="card-origin flexing p-3 mb-3">
    <div class="information align-content-between">
      <div class="section">
      <h3>Offered Sports</h3>
      <div class="card-tags mt-3">
        <div class="row d-flex">
          <% @club.offers.each do |offer| %>
          <div class="col-4">
            <div class="tag"><%= offer.sport.name %></div>
          </div>
          <% end %>
        </div>
      </div>
      </div>
      <div class="section">
      <h3 class="mt-5">Description</h3>
      <div>
        <p class="mt-3"><%= @club.description %> </p>
      </div>
      </div>
        <div class="section">
        <h3 class="mt-5">Get in Contact!</h3>
        <div class="d-flex justify-content-between align-items-center">
          <div class="admin text-center mt-3">
            <%= cl_image_tag @club.admin.photo, class: "avatar-bordered" %>
            <p><%= @club.admin.name %></p>
          </div>
          <% if current_user != @club.admin %>
          <div class="section">
            <% if @user_has_a_room %>
              <p class="btn btn-confirm" id="chat-with-club">Chat with the club</p>
            <% else %>
              <%= simple_form_for [ @club, Room.new ] do |f| %>
              <%= f.submit "Send a Message", class: 'btn btn-confirm'%>
              <% end %>
            <% end %>
          </div>
          <% end %>
        </div>
        </div>
      </div>
      <div class="round_card">
        <div
        id="map"
        style="width: 500px; height: 500px;"
        data-markers="<%= @marker.to_json %>" data-mapbox-api-key=<%= ENV['MAPBOX_API_KEY'] %>></div>
    </div>
    </div>

    <div class="card-origin mb-3 px-4">
      <div class="section">
        <div class="mt-4">
          <h3 style="text-align: center">Reviews</h3>
        </div>
        <% ratings = [] %>
        <% @club.reviews.each do |ra| %>
        <% ratings << ra.rating.to_i %>
        <% end %>
        <% if ratings.size != 0 %>
        <% rating = ratings.sum / ratings.size unless ratings.size == 0 %>
        <div style="text-align: center">Rating:
          <% rating.times do  %>
          <span><i class="fas fa-star"></i></span>
          <% end %>
        </div>
        <% end %>
      </div>


      <div class="section my-3">
        <h3 style="text-align: center" class="mt-3"><%= pluralize @club.reviews.size, "review" %></h3>

        <div class="row text-center">
          <% if @club.reviews.blank? %>
          <p>Be the first to leave a review for <%= @club.name %></p>
          <% else %>
          <% @club.reviews.each do |review| %>
          <div class="col-sm-12 col-md-6 col-lg-4">
            <div class="card-origin my-2">
              <div class="d-flex">
                <div class="text-review">
                  <p class="ml-2"><strong>Name: </strong> <%= review.user.name %></p>
                  <p class="ml-2"><strong>Comment: </strong><%= review.comment %></p>
                  <p class="ml-2"><strong>Rating: </strong>
                    <% review.rating.times do  %>
                    <span><i class="fas fa-star"></i></span>
                    <% end %>
                  </p>
                </div>
                <div class="user-av">
                  <%= cl_image_tag review.user.photo, class: "avatar-review-page" %>
                </div>
              </div>
            </div>
          </div>
          <% end %>
          <% end %>
        </div>
      </div>
    </div>

    <div class="section card-origin mb-3 p-3 text-center">
      <h3>Leave a Review</h3>
      <% @membership = Membership.where(user_id: current_user.id, club_id: @club.id) %>
      <% if @membership == [] %>
      <div class="section text-center">
        <div class="yellow_box">
          <p>Only Members can rate a Club...</p>
        </div>
      </div>
      <% elsif @membership[0].status == "Member" %>
      <div class="section">
        <h3 class="mt-5" style="text-align: center">Add a review</h3>
        <%= simple_form_for [ @club, Review.new ] do |f| %>
        <%= f.input :rating, collection: [ 1, 2, 3, 4, 5 ] %>
        <%= f.input :comment, as: :text %>
        <div style="text-align: center">
          <%= f.submit "Send the review", class: 'btn btn-confirm' %>
        </div>
        <% end %>
      </div>
      <% else %>
      <div class="section text-center">
        <div class="yellow_box mb-5">
          <p>Only Members can rate a Club...</p>
        </div>
      </div>
      <% end %>
    </div>

    <% if @user_has_a_room %>
    <%= render 'shared/chatroom', room: @user_has_a_room, club: @club %>
    <% end %>

    <script>
        const clearMessages = (index) => {
          chatboxes[index].messages = chatboxes[index].html.querySelectorAll('.message');
          chatboxes[index].messages.forEach((message) => {
            chatboxes[index].html.removeChild(message);
          })
        };

        const add_messages_to_box = (data, index) => {
          chatboxes[index].new_messages = data;
          chatboxes[index].new_messages.forEach((msg) => {
            if (msg['sender=']) {
              chatboxes[index].html.insertAdjacentHTML('beforeend', `
                <div class="d-flex justify-content-end message">
                  <div class="chat-cloud-club">
                    <p><strong>${msg['club_name=']}</strong></p>
                    <p>${msg['content=']}</p>
                  </div>
                </div>
              `);
            } else {
              chatboxes[index].html.insertAdjacentHTML('beforeend', `
                <div class="chat-cloud-user message">
                  <p><strong>${msg['user_name=']}</strong></p>
                  <p>${msg['content=']}</p>
                </div>
              `);
            };
          })
          chatboxes[index].html.scrollTop = chatboxes[index].html.scrollHeight;
        };

        const get_new_messages = async () => {
          chatboxes.forEach(async (box, index) => {
            const url = window.location.origin + "/api/v1/messages/" + box.roomId + `/${box.clubId}`;
            await fetch(url)
              .then(response => response.json())
              .then((data) => {
                if (box.new_messages != data) {
                  clearMessages(index);
                  add_messages_to_box(data, index);
                };
              });
          });
        };

        const send_new_message = async () => {
          chatboxes.forEach((box) => {
            if (box.chatInput.value.trim() != "") {
              const form = document.createElement('form');
              form.method = 'post';
              form.action = '/api/v1/messages/new';

              const hiddenField = document.createElement('input');
              hiddenField.type = 'hidden';
              hiddenField.name = 'authenticity_token';
              hiddenField.value = box.authToken;
              form.appendChild(hiddenField);

              const useridelement = document.createElement('input');
              useridelement.type = 'hidden';
              useridelement.name = 'user_id';
              useridelement.value = box.userId;
              form.appendChild(useridelement);

              const roomIdElement = document.createElement('input');
              roomIdElement.type = 'hidden';
              roomIdElement.name = 'room_id';
              roomIdElement.value = box.roomId;
              form.appendChild(roomIdElement);

              const clubIdElement = document.createElement('input');
              clubIdElement.type = 'hidden';
              clubIdElement.name = 'club_id';
              clubIdElement.value = box.clubId;
              form.appendChild(clubIdElement);

              const chatContent = document.createElement('input');
              chatContent.type = 'hidden';
              chatContent.name = 'content';
              chatContent.value = box.chatInput.value;
              form.appendChild(chatContent);

              document.body.appendChild(form);
              form.submit();
              box.chatInput.value = "";
            }
          })
        setTimeout(function() {
          get_new_messages();
        }, 250);
        };

        const generate_objects = () => {
          const rawChatboxes = document.querySelectorAll('.chatboxes')
          const temp_array = [];
          rawChatboxes.forEach((chatbox) => {
            const temp_obj = new Object;
            temp_obj.html = chatbox;
            temp_obj.messages = chatbox.querySelectorAll('.message');
            temp_obj.clubId = chatbox.querySelector('.clubID').innerText;
            temp_obj.userId = chatbox.querySelector('.userID').innerText;
            temp_obj.roomId = chatbox.querySelector('.roomID').innerText;
            temp_obj.authToken = chatbox.querySelector('.authToken').innerText;
            temp_obj.chatButton = document.getElementsByClassName(`chatButton${temp_obj.roomId}`)[0];
            temp_obj.chatInput = document.getElementsByClassName(`chatInput${temp_obj.roomId}`)[0];
            temp_obj.new_messages = null;
            temp_array.push(temp_obj)
          })
          setInterval(get_new_messages, 5000);
          return temp_array;
        };

        const chatboxes = generate_objects();

        const run_the_thing = () => {
          make_modal_work();
          document.addEventListener('DOMContentLoaded', (event) => {
            get_new_messages();
            chatboxes.forEach((box) => {
              box.chatButton.addEventListener('click', send_new_message);
              box.chatInput.addEventListener('keyup', (event) => {
                if (event.keyCode === 13) {
                  send_new_message();
                };
              });
            });
          });
        };

        const make_modal_work = () => {
          chatboxes.forEach((box) => {
            box.modalButton = document.getElementById(`chat-with-club`)
            box.modalOutside = box.html.parentNode.parentNode
            box.modalButton.addEventListener('click', (event) => {
              if (event.target === box.modalButton) {
                box.modalOutside.classList.toggle('disabled');
              }
            })
            box.modalOutside.addEventListener('click', (event) => {
              if (event.target === box.modalOutside) {
                box.modalOutside.classList.toggle('disabled');
              }
            })
          })
        }

        run_the_thing();
    </script>
